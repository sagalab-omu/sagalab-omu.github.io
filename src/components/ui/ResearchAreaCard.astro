---
export interface Props {
  name: string;
  description: string;
  icon?: string;
}

const { name, description, icon } = Astro.props;

// Get the base path from Astro config
const base = import.meta.env.BASE_URL;

// Add base path to icon if it's a relative path
const iconPath = icon ? (icon.startsWith('/') ? `${base}${icon}` : icon) : null;

// Placeholder icon if none provided
const placeholderIcon = `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='48' height='48' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M8 14s1.5 2 4 2 4-2 4-2'/%3E%3Cline x1='9' y1='9' x2='9.01' y2='9'/%3E%3Cline x1='15' y1='9' x2='15.01' y2='9'/%3E%3C/svg%3E`;
---

<div class="bg-white dark:bg-gray-900 rounded-xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
  <div class="flex items-center justify-center w-16 h-16 bg-blue-100 dark:bg-blue-900/30 rounded-lg mb-6 mx-auto">
    {iconPath ? (
      <img
        src={iconPath}
        alt={`${name} icon`}
        class="w-10 h-10"
      />
    ) : (
      <img
        src={placeholderIcon}
        alt="Research area icon"
        class="w-10 h-10"
      />
    )}
  </div>
  <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4 text-center">
    {name}
  </h3>
  <p class="text-gray-600 dark:text-gray-300 text-center leading-relaxed">
    {description}
  </p>
</div>
